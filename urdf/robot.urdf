<robot name="summit_xl">
    <!-- Define Gazebo materials for colors -->
    <gazebo>
        <material>Gazebo/Blue</material>
        <!-- Base link color -->
    </gazebo>
    <gazebo reference="base_link">
        <material>Gazebo/Blue</material>
        <!-- Base link color -->
    </gazebo>
    <gazebo reference="summit_front_right_wheel_link">
        <material>Gazebo/Black</material>
        <!-- Wheel color -->
    </gazebo>
    <gazebo reference="summit_front_left_wheel_link">
        <material>Gazebo/Black</material>
        <!-- Wheel color -->
    </gazebo>
    <gazebo reference="summit_back_left_wheel_link">
        <material>Gazebo/Black</material>
        <!-- Wheel color -->
    </gazebo>
    <gazebo reference="summit_back_right_wheel_link">
        <material>Gazebo/Black</material>
        <!-- Wheel color -->
    </gazebo>
    <gazebo reference="summit_lidar_link">
        <material>Gazebo/Grey</material>
        <!-- LiDAR color -->
    </gazebo>
    <!--
    Base link with inertial, visual, and collision properties 
    -->
    <link name="base_link">
        <inertial>
            <mass value="10.0"/>
            <!-- Mass of the base link (in kg) -->
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <!-- Center of mass -->
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
            <!-- Inertia matrix -->
        </inertial>
        <visual>
            <geometry>
                <box size="0.268 0.247 0.13"/>
                <!-- Visual geometry (box) -->
            </geometry>
            <material name="blue">
                <color rgba="0 0 1 1"/>
                <!-- Blue color -->
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="0.268 0.247 0.1"/>
                <!-- Collision geometry (box) -->
            </geometry>
        </collision>
    </link>

    <!-- BASE_FOOTPRINT LINK -->
    <link name="base_footprint">
    </link>
    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>


    <!-- Front right wheel -->
    <link name="summit_front_right_wheel_link">
        <inertial>
            <mass value="1.0"/>
            <!-- Mass of the wheel (in kg) -->
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
            <!-- Inertia matrix -->
        </inertial>
        <visual>
            <geometry>
                <cylinder length="0.1" radius="0.07"/>
                <!-- Visual geometry (cylinder) -->
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
                <!-- Black color -->
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.1" radius="0.07"/>
                <!-- Collision geometry (cylinder) -->
            </geometry>
        </collision>
    </link>
    <joint name="summit_front_right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="summit_front_right_wheel_link"/>
        <origin xyz="0.1 -0.173 -0.05" rpy="1.57 0 0"/>
        <!-- Position of the wheel -->
        <axis xyz="0 0 1"/>
        <!--
        Rotation axis (Z-axis for forward/backward motion) 
        -->
    </joint>
    <!-- Front left wheel -->
    <link name="summit_front_left_wheel_link">
        <inertial>
            <mass value="1.0"/>
            <!-- Mass of the wheel (in kg) -->
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
            <!-- Inertia matrix -->
        </inertial>
        <visual>
            <geometry>
                <cylinder length="0.1" radius="0.07"/>
                <!-- Visual geometry (cylinder) -->
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
                <!-- Black color -->
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.1" radius="0.07"/>
                <!-- Collision geometry (cylinder) -->
            </geometry>
        </collision>
    </link>
    <joint name="summit_front_left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="summit_front_left_wheel_link"/>
        <origin xyz="0.1 0.173 -0.05" rpy="1.57 0 0"/>
        <!-- Position of the wheel -->
        <axis xyz="0 0 1"/>
        <!--
        Rotation axis (Z-axis for forward/backward motion) 
        -->
    </joint>
    <!-- Back left wheel -->
    <link name="summit_back_left_wheel_link">
        <inertial>
            <mass value="1.0"/>
            <!-- Mass of the wheel (in kg) -->
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
            <!-- Inertia matrix -->
        </inertial>
        <visual>
            <geometry>
                <cylinder length="0.1" radius="0.07"/>
                <!-- Visual geometry (cylinder) -->
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
                <!-- Black color -->
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.1" radius="0.07"/>
                <!-- Collision geometry (cylinder) -->
            </geometry>
        </collision>
    </link>
    <joint name="summit_back_left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="summit_back_left_wheel_link"/>
        <origin xyz="-0.1 0.173 -0.05" rpy="1.57 0 0"/>
        <!-- Position of the wheel -->
        <axis xyz="0 0 1"/>
        <!--
        Rotation axis (Z-axis for forward/backward motion) 
        -->
    </joint>
    <!-- Back right wheel -->
    <link name="summit_back_right_wheel_link">
        <inertial>
            <mass value="1.0"/>
            <!-- Mass of the wheel (in kg) -->
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
            <!-- Inertia matrix -->
        </inertial>
        <visual>
            <geometry>
                <cylinder length="0.1" radius="0.07"/>
                <!-- Visual geometry (cylinder) -->
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
                <!-- Black color -->
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder length="0.1" radius="0.07"/>
                <!-- Collision geometry (cylinder) -->
            </geometry>
        </collision>
    </link>
    <joint name="summit_back_right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="summit_back_right_wheel_link"/>
        <origin xyz="-0.1 -0.173 -0.05" rpy="1.57 0 0"/>
        <!-- Position of the wheel -->
        <axis xyz="0 0 1"/>
        <!--
        Rotation axis (Z-axis for forward/backward motion) 
        -->
    </joint>

        <!-- IMU Sensor -->
    <link name="imu_link">
        <inertial>
            <mass value="0.05"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
        </inertial>
        <visual>
            <geometry>
                <box size="0.05 0.05 0.02"/>
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="0.05 0.05 0.02"/>
            </geometry>
        </collision>
    </link>

    <!-- Joint entre base_link et imu_link -->
    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="0 0 0.05" rpy="0 0 0"/>
    </joint>

    <!-- Gazebo-specific properties for IMU -->
    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>50</update_rate>
            <imu>
                <angular_velocity>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.02</stddev>
                    </noise>
                </angular_velocity>
                <linear_acceleration>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.02</stddev>
                    </noise>
                </linear_acceleration>
            </imu>
            <plugin name="gazebo_ros_imu_sensor" filename="libgazebo_ros_imu_sensor.so">
                <ros>
                    <namespace>/</namespace>
                    <remapping>imu/data:=imu/data</remapping>
                </ros>
                <always_on>true</always_on>
                <update_rate>50</update_rate>
                <body_name>imu_link</body_name>
                <frame_name>imu_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>


    <!-- LiDAR Sensor -->
    <link name="lidar_link">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.05"/>
                <!-- LiDAR dimensions -->
            </geometry>
            <material name="red">
                <color rgba="1 0 0 1"/>
                <!-- Red color -->
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.05"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.2"/>
            <!-- Mass of the LiDAR -->
            <origin xyz="0 0 0.85" rpy="0 0 0"/>
            <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
        </inertial>
    </link>

    <!-- Joint between base_link and lidar_link -->
    <joint name="summit_lidar_joint" type="fixed">
        <parent link="base_link"/>
        <child link="lidar_link"/>
        <origin xyz="0 0 0.15" rpy="0 0 0"/>
    </joint>

    <!-- Gazebo-specific properties for LiDAR -->
    <gazebo reference="lidar_link">
        <material>Gazebo/Red</material>
        <sensor name="lidar_sensor" type="ray">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <!-- Number of samples -->
                        <resolution>1</resolution>
                        <min_angle>-3.14159</min_angle>
                        <!-- -180 degrees -->
                        <max_angle>3.14159</max_angle>
                        <!-- +180 degrees -->
                    </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <!-- Minimum range in meters -->
                    <max>10.0</max>
                    <!-- Maximum range in meters -->
                    <resolution>0.01</resolution>
                </range>
            </ray>
            <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <namespace>/</namespace>
                    <remapping>~/out:=scan</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>lidar_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>



    <!-- Camera Link -->
    <link name="camera_link">
        <visual>
            <geometry>
                <box size="0.05 0.05 0.05"/>
                <!-- Visual geometry (box) -->
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
                <!-- Black color -->
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="0.05 0.05 0.05"/>
                <!-- Collision geometry (box) -->
            </geometry>
        </collision>
        <inertial>
            <mass value="0.1"/>
            <!-- Mass of the camera -->
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
            <!-- Inertia matrix -->
        </inertial>
    </link>

    <!-- Camera Joint -->
    <joint name="camera_joint" type="fixed">
        <parent link="base_link"/>  <!-- Attach to the LiDAR link -->
        <child link="camera_link"/>
        <origin xyz="0 0 0.1" rpy="0 0 3.14"/>  <!-- Position the camera above the LiDAR -->
    </joint>

    <!-- Gazebo-specific properties for Camera -->
    <gazebo reference="camera_link">
        <sensor name="camera_sensor" type="camera">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>30</update_rate>
            <camera>
                <horizontal_fov>1.0472</horizontal_fov>
                <!-- 60 degrees in radians -->
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>100</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <ros>
                    <namespace>/</namespace>
                    <remapping>image_raw:=camera/image_raw</remapping>
                    <remapping>camera_info:=camera/camera_info</remapping>
                </ros>
                <camera_name>camera</camera_name>
                <frame_name>camera_link</frame_name>
                <hack_baseline>0.07</hack_baseline>
            </plugin>
        </sensor>
    </gazebo>


     <!-- Differential Drive Plugin -->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <ros>
                <namespace>/</namespace>
            </ros>
            <left_joint>summit_front_right_wheel_joint</left_joint>
            <right_joint>summit_front_left_wheel_joint</right_joint>
            
            <wheel_separation>0.346</wheel_separation>
            <wheel_diameter>0.14</wheel_diameter>
            <torque>10</torque>
            <command_topic>cmd_vel</command_topic>
            <odometry_topic>odom</odometry_topic>

            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>
            
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>
            <update_rate>30</update_rate>
        </plugin>
    </gazebo>
    <!-- Joint State Publisher -->
    <gazebo>
        <plugin name="joint_state_controller" filename="libgazebo_ros_joint_state_publisher.so">
            <ros>
                <namespace>/</namespace>
            </ros>
            <update_rate>30</update_rate>
            <joint_name>summit_front_left_wheel_joint</joint_name>
            <joint_name>summit_front_right_wheel_joint</joint_name>
            <joint_name>summit_back_left_wheel_joint</joint_name>
            <joint_name>summit_back_right_wheel_joint</joint_name>
        </plugin>
    </gazebo>

    
</robot>